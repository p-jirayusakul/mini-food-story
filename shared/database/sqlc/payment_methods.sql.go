// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: payment_methods.sql

package database

import (
	"context"
)

const listPaymentMethods = `-- name: ListPaymentMethods :many
SELECT id, code, "name", name_en as "nameEN"
FROM public.payment_methods WHERE enable IS TRUE ORDER BY id
`

type ListPaymentMethodsRow struct {
	ID     int64  `json:"id"`
	Code   string `json:"code"`
	Name   string `json:"name"`
	NameEN string `json:"nameEN"`
}

func (q *Queries) ListPaymentMethods(ctx context.Context) ([]*ListPaymentMethodsRow, error) {
	rows, err := q.db.Query(ctx, listPaymentMethods)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*ListPaymentMethodsRow{}
	for rows.Next() {
		var i ListPaymentMethodsRow
		if err := rows.Scan(
			&i.ID,
			&i.Code,
			&i.Name,
			&i.NameEN,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
