// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateOrderItems implements pgx.CopyFromSource.
type iteratorForCreateOrderItems struct {
	rows                 []CreateOrderItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateOrderItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateOrderItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].OrderID,
		r.rows[0].ProductID,
		r.rows[0].StatusID,
		r.rows[0].ProductName,
		r.rows[0].ProductNameEn,
		r.rows[0].Price,
		r.rows[0].Quantity,
		r.rows[0].Note,
		r.rows[0].CreatedAt,
	}, nil
}

func (r iteratorForCreateOrderItems) Err() error {
	return nil
}

func (q *Queries) CreateOrderItems(ctx context.Context, arg []CreateOrderItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"public", "order_items"}, []string{"id", "order_id", "product_id", "status_id", "product_name", "product_name_en", "price", "quantity", "note", "created_at"}, &iteratorForCreateOrderItems{rows: arg})
}
