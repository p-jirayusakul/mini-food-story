// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: md_categories.sql

package database

import (
	"context"
)

const listCategory = `-- name: ListCategory :many
SELECT id, "name", name_en as "nameEN" FROM public.md_categories ORDER BY id DESC
`

type ListCategoryRow struct {
	ID     int64  `json:"id"`
	Name   string `json:"name"`
	NameEN string `json:"nameEN"`
}

func (q *Queries) ListCategory(ctx context.Context) ([]*ListCategoryRow, error) {
	rows, err := q.db.Query(ctx, listCategory)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*ListCategoryRow{}
	for rows.Next() {
		var i ListCategoryRow
		if err := rows.Scan(&i.ID, &i.Name, &i.NameEN); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
